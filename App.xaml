<Application x:Class="SELF_KBM_DESIGN.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SELF_KBM_DESIGN"
             StartupUri="Views/ForTestPage.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <!-- CommonCombobox Style -->
            <Style x:Key="CustomComboBox" TargetType="ComboBox">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="BorderBrush" Value="#F5F4FB"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="20"
                                    SnapsToDevicePixels="True">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="10" Direction="270" ShadowDepth="4" Color="#F5F4FB" />
                                    </Border.Effect>
                                    <Grid>
                                        <ToggleButton x:Name="ToggleButton"
                                                  Grid.Column="2"
                                                  Focusable="False"
                                                  IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ClickMode="Press"
                                                  HorizontalAlignment="Right"
                                                  Margin="10,0"
                                                  Background="Transparent"
                                                  BorderThickness="0">
                                            <Path x:Name="Arrow" 
                                              Fill="Black"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Data="M 0 0 L 4 4 L 8 0 Z"/>
                                        </ToggleButton>
                                        <ContentPresenter x:Name="ContentSite"
                                                      IsHitTestVisible="False"
                                                      Content="{TemplateBinding SelectionBoxItem}"
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                      Margin="5,3,23,3"
                                                      VerticalAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        <TextBox x:Name="PART_EditableTextBox"
                                             Style="{x:Null}"
                                             Template="{x:Null}"
                                             HorizontalAlignment="Left"
                                             VerticalAlignment="Center"
                                             Background="Transparent"
                                             Foreground="{TemplateBinding Foreground}"
                                             Focusable="True"
                                             IsReadOnly="{TemplateBinding IsReadOnly}"
                                             Margin="5,3,23,3"/>
                                    </Grid>
                                </Border>
                                <Popup x:Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                    <Grid x:Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder"
                                            Background="White"
                                            BorderBrush="#F5F4FB"
                                            BorderThickness="2"
                                            CornerRadius="20">
                                            <Border.Effect>
                                                <DropShadowEffect BlurRadius="10" Direction="270" ShadowDepth="4" Color="#F5F4FB" />
                                            </Border.Effect>
                                            <ScrollViewer Margin="4,6,4,6"
                                                      SnapsToDevicePixels="True">
                                                <StackPanel IsItemsHost="True"
                                                        KeyboardNavigation.DirectionalNavigation="Contained" />
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="#EEE"/>
                                    <Setter Property="Foreground" Value="#888"/>
                                </Trigger>
                                <Trigger Property="IsEditable" Value="True">
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="PlainButtonStyle" TargetType="Button">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="20">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#273142"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Regular"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0.5"
                                    CornerRadius="5">
                                    <DockPanel>
                                        <ContentPresenter x:Name="ContentSite"
                                                      VerticalAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      Margin="10,0,0,0"
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                      Content="{TemplateBinding SelectionBoxItem}"
                                                      IsHitTestVisible="False" />
                                        <ToggleButton DockPanel.Dock="Right"
                                                  x:Name="ToggleButton"
                                                  Focusable="False"
                                                  IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                  >
                                            <ToggleButton.Style>
                                                <Style TargetType="ToggleButton">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="ToggleButton">
                                                                <Border Background="Transparent"
                                                                    BorderBrush="Transparent"
                                                                    BorderThickness="1"
                                                                    CornerRadius="5">
                                                                    <Path x:Name="Arrow"
                                                                      Data="M 0 0 L 4 4 L 8 0 Z"
                                                                      HorizontalAlignment="Right"
                                                                      VerticalAlignment="Center"
                                                                      Margin="0,0,2,0"
                                                                      Fill="Red"/>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsChecked" Value="True">
                                                                        <Setter TargetName="Arrow" Property="Data" Value="M 0 4 L 4 0 L 8 4 Z"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter TargetName="Arrow" Property="Fill" Value="Red"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                    </DockPanel>
                                </Border>
                                <Popup x:Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                    <Grid x:Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="200"
                                      Background="White"
                                      >
                                        <ScrollViewer Margin="4,6,4,6"
                                                  SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" SourceName="Popup" Value="True">
                                    <Setter TargetName="DropDown" Property="Margin" Value="0,0,0,5"/>
                                    <Setter TargetName="DropDown" Property="SnapsToDevicePixels" Value="True"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="Gray"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Black"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Black"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!--<Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>-->
            </Style>

            <!-- Window Button Styles -->
            <Style x:Key="WindowNewButtonStyle" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="0">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="RED"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="CloseNewButtonStyle" BasedOn="{StaticResource WindowNewButtonStyle}" TargetType="Button">
                <Setter Property="Content">
                    <Setter.Value>
                        <Image Source="pack://application:,,,/Res/iconClose.png" Height="20" Width="20"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="0"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="0.8"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="MinimizeNewButtonStyle" BasedOn="{StaticResource WindowNewButtonStyle}" TargetType="Button">
                <Setter Property="Content">
                    <Setter.Value>
                        <Image Source="pack://application:,,,/Res/iconMinimize.png" Width="15" Height="15"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="0"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="0.8"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="MaximizeNewButtonStyle" BasedOn="{StaticResource WindowNewButtonStyle}" TargetType="Button">
                <Setter Property="Content">
                    <Setter.Value>
                        <Image Source="pack://application:,,,/Res/iconMaximize.png" Width="15" Height="15"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="0"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="0.8"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Common Button Styles -->
            <Style x:Key="commonButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Width" Value="42"/>
                <Setter Property="Height" Value="42"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="0">
                                <ContentPresenter VerticalAlignment="Center" 
                                                  HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#eb1423"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="Button" x:Key="CustomButtonStyle">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="#4673C2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" CornerRadius="3">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Setter Property="Background" Value="#949494" TargetName="ButtonBorder"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#949494" TargetName="ButtonBorder"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- More styles here -->
            <LinearGradientBrush x:Key="ButtonHoverGradient" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="#BDA55D" Offset="10.0"/>
                <!-- More vibrant top part on hover -->
                <GradientStop Color="#BDA55D" Offset="1.0"/>
            </LinearGradientBrush>

            <DropShadowEffect x:Key="ButtonShadow" Color="#BDA55D" Opacity="0.3" ShadowDepth="5" BlurRadius="8"/>


            <Style x:Key="GreenButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="#BDA55D"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontFamily" Value="Source Sans Pro"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="DemiBold"/>
                <Setter Property="BorderBrush" Value="#BDA55D"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="Effect" Value="{StaticResource ButtonShadow}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="15">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!-- Hover state -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonHoverGradient}"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="#3B4A63"/>
                                    <!-- Light border on hover -->

                                    <!-- Hover scaling animation -->
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:0.2"/>
                                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>

                                    <!-- Revert animation when mouse leaves -->
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.2"/>
                                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>

                                <!-- Pressed state -->
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#1E2734"/>
                                    <!-- Darker pressed effect -->
                                </Trigger>

                                <!-- Disabled state -->
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="#B0C4DE"/>
                                    <!-- Muted color for disabled -->
                                    <Setter TargetName="border" Property="BorderBrush" Value="#B0C4DE"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="WhiteButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="#FFF"/>
                <Setter Property="FontFamily" Value="Source Sans Pro"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FontWeight" Value="DemiBold"/>
                <Setter Property="BorderBrush" Value="#E7E7E7"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="10">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="WidgetButtonStyle" TargetType="Button">
                <Setter Property="FontFamily" Value="Source Sans Pro"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FontWeight" Value="DemiBold"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="10">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
